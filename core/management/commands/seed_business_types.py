# core/management/commands/seed_business_types.py

from django.core.management.base import BaseCommand
from core.models import BusinessType

class Command(BaseCommand):
    help = 'Inserta los tipos de negocio predefinidos'

    def handle(self, *args, **kwargs):
        tipos = [
            "Papelería",
            "Ciber café",
            "Tienda de abarrotes",
            "Estética",
            "Consultorio médico",
            "Tienda de ropa",
            "Cafetería",
            "Restaurante",
            "Tienda de electrónica",
            "Puesto de comida",
            "Peluquería",
            "Tienda naturista",
            "Panadería",
            "Tortillería",
            "Refaccionaria",
            "Taller mecánico",
            "Ferretería",
            "Miscelánea",
            "Venta de accesorios para celulares",
            "Renta de computadoras",
            "Renta de videojuegos",
            "Imprenta",
            "Agencia de viajes",
            "Despacho contable",
            "Estudio fotográfico",
            "Centro de copiado",
            "Escuela de idiomas",
            "Consultorio dental",
            "Clínica veterinaria",
            "Gimnasio",
            "Spa",
            "Lavandería",
            "Tintorería",
            "Tienda de regalos",
            "Florería",
            "Boutique",
            "Zapatería",
            "Tienda de disfraces",
            "Juguetería",
            "Distribuidora de productos de limpieza",
            "Venta de cosméticos",
            "Tienda de artículos religiosos",
            "Papelería mayorista",
            "Tienda de computadoras",
            "Centro de servicio técnico",
            "Venta de autopartes",
            "Venta de herramientas",
            "Cerrajería",
            "Tienda de mascotas",
            "Venta de artículos deportivos",
            "Tienda de ciclismo",
            "Venta de uniformes",
            "Estudio de tatuajes",
            "Estudio de uñas",
            "Barbería",
            "Tienda de vinos y licores",
            "Mini super",
            "Distribuidora de alimentos",
            "Frutería",
            "Carnicería",
            "Pescadería",
            "Verdulería",
            "Heladería",
            "Rosticería",
            "Tienda orgánica",
            "Tienda de té y café",
            "Rosticería de pollos",
            "Venta de artículos para fiesta",
            "Tienda de refacciones para motos",
            "Almacén de herramientas",
            "Distribuidora de papel",
            "Tienda de cómics",
            "Tienda de videojuegos",
            "Centro cultural",
            "Editorial independiente",
            "Tienda de productos ecológicos",
            "Tienda de decoración",
            "Tienda de artículos para el hogar",
            "Distribuidora de plásticos",
            "Venta de artesanías",
            "Tienda de segunda mano",
            "Tienda de reciclaje",
            "Casa de empeño",
            "Tienda de productos coreanos",
            "Venta de celulares",
            "Tienda de fundas y accesorios",
            "Centro de desarrollo infantil",
            "Escuela de música",
            "Clases particulares",
            "Academia de baile",
            "Tienda de instrumentos musicales",
            "Academia de computación",
            "Clases de regularización",
            "Guardería",
            "Tienda de repostería",
            "Tienda de productos sin gluten",
            "Comida vegana",
            "Dark kitchen",
            "Tienda de artículos escolares",
            "Tienda de productos importados",
        ]

        for tipo in tipos:
            obj, created = BusinessType.objects.get_or_create(name=tipo)
            if created:
                self.stdout.write(f'Creado: {tipo}')
            else:
                self.stdout.write(f'Ya existe: {tipo}')
